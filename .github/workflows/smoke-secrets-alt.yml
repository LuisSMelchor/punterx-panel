name: Smoke Secrets Alt
on: { workflow_dispatch: {} }
jobs:
  ping:
    runs-on: ubuntu-latest
    steps:
      - name: Step-env measure (new names)
        shell: bash
        env:
          SB: ${{ secrets.SB_URL }}
          DT: ${{ secrets.DT_DBG }}
          CX: ${{ secrets.CTRL_X }}
        run: |
          set -euo pipefail
          for k in SB DT CX; do
            v="${!k:-}"
            b=$(printf '%s' "$v" | wc -c)
            echo "[AF_DEBUG] STEP_ENV $k bytes=$b"
          done
      - name: Inline measure (new names)
        shell: bash
        run: |
          set -euo pipefail
          sb_b=$(printf '%s' "${{ secrets.SB_URL }}" | wc -c)
          dt_b=$(printf '%s' "${{ secrets.DT_DBG }}" | wc -c)
          cx_b=$(printf '%s' "${{ secrets.CTRL_X }}" | wc -c)
          echo "[AF_DEBUG] INLINE SB_URL bytes=$sb_b"
          echo "[AF_DEBUG] INLINE DT_DBG bytes=$dt_b"
          echo "[AF_DEBUG] INLINE CTRL_X bytes=$cx_b"
      - name: Hex/base64 of secrets (new names)
        shell: bash
        run: |
          set -euo pipefail
          SB="${{ secrets.SB_URL }}"
          DT="${{ secrets.DT_DBG }}"
          CX="${{ secrets.CTRL_X }}"
          for K in SB DT CX; do
            V="${!K}"
            printf %s "$V" | wc -c | xargs -I{} echo "[AF_DEBUG] ${K} bytes={}"
            printf %s "$V" | head -c1 | od -An -t x1 | tr -d " \n" | xargs -I{} echo "[AF_DEBUG] ${K} first-byte-hex={}"
            printf %s "$V" | base64 | head -n1 | xargs -I{} echo "[AF_DEBUG] ${K} b64={}"
          done
        shell: bash
        run: |
          set -euo pipefail
          for K in SB_URL DT_DBG CTRL_X; do
            V="${{ secrets[env.K] }}"
            printf '%s' "$V" | wc -c | xargs -I{} echo "[AF_DEBUG] ${K} bytes={}"
            printf '%s' "$V" | head -c1 | od -An -t x1 | tr -d ' \n' | xargs -I{} echo "[AF_DEBUG] ${K} first-byte-hex={}"
            printf '%s' "$V" | base64 | head -n1 | xargs -I{} echo "[AF_DEBUG] ${K} b64={}"
          done
