name: Deploy to Netlify

on:
  push:
    branches: [main]
  workflow_dispatch: {}

# evita ejecuciones solapadas (si pusheas varias veces seguidas)
concurrency:
  group: netlify-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      NODE_VERSION: '20.19.4'
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      TZ: 'UTC'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Lint (opcional)
        run: |
          if [ -f .eslintrc.json ] || [ -f .eslintrc.js ]; then
            npx eslint . || true
          else
            echo "No ESLint config, skipping."
          fi

      - name: Build
        run: npm run build

      - name: Install Netlify CLI
        run: npm i -g netlify-cli@17

      - name: Netlify Deploy (production)
        run: |
          netlify deploy \
            --auth $NETLIFY_AUTH_TOKEN \
            --site $NETLIFY_SITE_ID \
            --dir . \
            --functions netlify/functions \
            --prod \
            --message "CI deploy $GITHUB_SHA"

      # Health-check del proyecto (scripts/health-check.mjs que te pasé)
      - name: Health Check
        run: |
          if [ -f scripts/health-check.mjs ]; then
            node scripts/health-check.mjs
          else
            echo "scripts/health-check.mjs no existe, omitiendo."
          fi

      # (Opcional) publica artefactos útiles del build
      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: netlify-build-logs
          path: |
            .netlify
            netlify/functions
          if-no-files-found: ignore
